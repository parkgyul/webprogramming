{"ast":null,"code":"var _jsxFileName = \"/Users/gyuri/Desktop/4-1/webprogramming/week3/week3/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const navigate = useNavigate();\n  const [boardList, setBoardList] = useState([]);\n  const [perPage, setPerPage] = useState(10); // 기본으로 보여질 게시글 수\n  const [currentPage, setCurrentPage] = useState(1); // 현재 페이지\n\n  const getBoardList = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/main\");\n      const responseData = response.data;\n      setBoardList(responseData.data);\n    } catch (error) {\n      console.error(\"불러오지 못함\", error);\n    }\n  };\n  const handlePerPageChange = e => {\n    setPerPage(parseInt(e.target.value));\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  useEffect(() => {\n    getBoardList();\n  }, []);\n\n  // 현재 페이지의 게시글을 계산합니다.\n  const indexOfLastPost = currentPage * perPage;\n  const indexOfFirstPost = indexOfLastPost - perPage;\n  const currentPosts = boardList.slice(indexOfFirstPost, indexOfLastPost);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAC8C\\uC2DC\\uD310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: perPage,\n        onChange: handlePerPageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"10\\uAC1C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 20,\n          children: \"20\\uAC1C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 30,\n          children: \"30\\uAC1C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: currentPosts.map(board => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/board/${board.id}`,\n          children: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), board.writingTime, board.writer]\n      }, board.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      perPage: perPage,\n      totalPosts: boardList.length,\n      currentPage: currentPage,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n// 페이지 네이션 컴포넌트\n_s(Board, \"kSIcr7TcUmaVRntw/XBHsxPNN3I=\", false, function () {\n  return [useNavigate];\n});\n_c = Board;\nconst Pagination = ({\n  perPage,\n  totalPosts,\n  currentPage,\n  onPageChange\n}) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalPosts / perPage); i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPageChange(number),\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Pagination;\nexport default Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"Pagination\");","map":{"version":3,"names":["React","useEffect","useState","Link","axios","useNavigate","jsxDEV","_jsxDEV","Board","_s","navigate","boardList","setBoardList","perPage","setPerPage","currentPage","setCurrentPage","getBoardList","response","get","responseData","data","error","console","handlePerPageChange","e","parseInt","target","value","handlePageChange","page","indexOfLastPost","indexOfFirstPost","currentPosts","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","board","to","id","title","writingTime","writer","Pagination","totalPosts","length","onPageChange","_c","pageNumbers","i","Math","ceil","push","number","onClick","_c2","$RefreshReg$"],"sources":["/Users/gyuri/Desktop/4-1/webprogramming/week3/week3/src/components/Board.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Board = () => {\n  const navigate = useNavigate();\n  const [boardList, setBoardList] = useState([]);\n  const [perPage, setPerPage] = useState(10); // 기본으로 보여질 게시글 수\n  const [currentPage, setCurrentPage] = useState(1); // 현재 페이지\n\n  const getBoardList = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/main\");\n      const responseData = response.data;\n\n      setBoardList(responseData.data);\n    } catch (error) {\n      console.error(\"불러오지 못함\", error);\n    }\n  };\n\n  const handlePerPageChange = (e) => {\n    setPerPage(parseInt(e.target.value));\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    getBoardList();\n  }, []);\n\n  // 현재 페이지의 게시글을 계산합니다.\n  const indexOfLastPost = currentPage * perPage;\n  const indexOfFirstPost = indexOfLastPost - perPage;\n  const currentPosts = boardList.slice(indexOfFirstPost, indexOfLastPost);\n\n  return (\n    <div>\n      <h2>게시판</h2>\n      <div>\n        {/* 한 페이지에 보여질 게시글 수를 선택할 수 있는 드롭다운 메뉴 */}\n        <select value={perPage} onChange={handlePerPageChange}>\n          <option value={10}>10개</option>\n          <option value={20}>20개</option>\n          <option value={30}>30개</option>\n        </select>\n      </div>\n      <ul>\n        {/* 현재 페이지의 게시글 목록을 표시합니다. */}\n        {currentPosts.map((board) => (\n          <li key={board.id}>\n            <Link to={`/board/${board.id}`}>{board.title}</Link>\n            {board.writingTime}\n            {board.writer}\n          </li>\n        ))}\n      </ul>\n      {/* 페이지 네이션을 표시합니다. */}\n      <Pagination\n        perPage={perPage}\n        totalPosts={boardList.length}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n};\n\n// 페이지 네이션 컴포넌트\nconst Pagination = ({ perPage, totalPosts, currentPage, onPageChange }) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalPosts / perPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <ul>\n      {pageNumbers.map((number) => (\n        <li key={number}>\n          <button onClick={() => onPageChange(number)}>{number}</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}