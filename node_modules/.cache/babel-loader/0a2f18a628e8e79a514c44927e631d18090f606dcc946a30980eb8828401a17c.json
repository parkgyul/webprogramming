{"ast":null,"code":"var _jsxFileName = \"/Users/gyuri/Desktop/4-1/week4_front_min/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../css/Board_style.css\";\nimport { API_BASE_URL } from \"../config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const navigate = useNavigate();\n  const [boardList, setBoardList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    getBoardList();\n  }, [currentPage, postsPerPage]);\n  const getBoardList = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/board/me`);\n      if (Array.isArray(response.data)) {\n        // 받아온 데이터가 배열인지 확인\n        setBoardList(response.data);\n        setTotalPages(Math.ceil(response.data.length / postsPerPage));\n      } else {\n        throw new Error(\"서버로부터 올바른 데이터를 받지 못했습니다.\");\n      }\n    } catch (error) {\n      console.error(\"불러오지 못함\", error);\n    }\n  };\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = boardList.slice(indexOfFirstPost, indexOfLastPost);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const handlePostsPerPage = e => {\n    setPostsPerPage(parseInt(e.target.value));\n    setCurrentPage(1);\n  };\n  const Post = () => {\n    navigate(\"/postform\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"board-title\",\n      children: \"\\uAC8C\\uC2DC\\uD310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Post,\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"board-posts\",\n      children: currentPosts.map(board => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"board-post-item\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/board/${board.id}`,\n          children: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uC791\\uC131\\uC790: \", board.writer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" | \\uC791\\uC131 \\uC2DC\\uAC04: \", board.writingTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, board.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-posts-per-page\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uAC8C\\uC2DC\\uBB3C \\uC218:\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: postsPerPage,\n          onChange: handlePostsPerPage,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 10,\n            children: \"10\\uAC1C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 20,\n            children: \"20\\uAC1C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 30,\n            children: \"30\\uAC1C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-pagination\",\n      children: [...Array(totalPages).keys()].map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: currentPage === number + 1 ? \"selected\" : \"\",\n        onClick: () => paginate(number + 1),\n        children: number + 1\n      }, number + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"aWgktUW67aemJvqDa2F50sOc7ko=\", false, function () {\n  return [useNavigate];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","axios","API_BASE_URL","jsxDEV","_jsxDEV","Board","_s","navigate","boardList","setBoardList","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","totalPages","setTotalPages","getBoardList","response","get","Array","isArray","data","Math","ceil","length","Error","error","console","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","handlePostsPerPage","e","parseInt","target","value","Post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","board","to","id","title","writer","writingTime","onChange","keys","number","_c","$RefreshReg$"],"sources":["/Users/gyuri/Desktop/4-1/week4_front_min/src/components/Board.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../css/Board_style.css\";\nimport { API_BASE_URL } from \"../config.js\";\n\nconst Board = () => {\n  const navigate = useNavigate();\n  const [boardList, setBoardList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    getBoardList();\n  }, [currentPage, postsPerPage]);\n\n  const getBoardList = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/board/me`);\n      if (Array.isArray(response.data)) {\n        // 받아온 데이터가 배열인지 확인\n        setBoardList(response.data);\n        setTotalPages(Math.ceil(response.data.length / postsPerPage));\n      } else {\n        throw new Error(\"서버로부터 올바른 데이터를 받지 못했습니다.\");\n      }\n    } catch (error) {\n      console.error(\"불러오지 못함\", error);\n    }\n  };\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = boardList.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const handlePostsPerPage = (e) => {\n    setPostsPerPage(parseInt(e.target.value));\n    setCurrentPage(1);\n  };\n\n  const Post = () => {\n    navigate(\"/postform\");\n  };\n  return (\n    <div className=\"board-container\">\n      <h1 className=\"board-title\">게시판</h1>\n      <div className=\"board-button\">\n        <button onClick={Post}>글쓰기</button>\n      </div>\n      <br />\n\n      <ul className=\"board-posts\">\n        {currentPosts.map((board) => (\n          <li key={board.id} className=\"board-post-item\">\n            <Link to={`/board/${board.id}`}>{board.title}</Link>\n            <span>작성자: {board.writer}</span>\n            <span> | 작성 시간: {board.writingTime}</span>\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"board-posts-per-page\">\n        <label>\n          게시물 수:{\" \"}\n          <select value={postsPerPage} onChange={handlePostsPerPage}>\n            <option value={10}>10개</option>\n            <option value={20}>20개</option>\n            <option value={30}>30개</option>\n          </select>\n        </label>\n      </div>\n\n      <div className=\"board-pagination\">\n        {[...Array(totalPages).keys()].map((number) => (\n          <button\n            key={number + 1}\n            className={currentPage === number + 1 ? \"selected\" : \"\"}\n            onClick={() => paginate(number + 1)}\n          >\n            {number + 1}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}