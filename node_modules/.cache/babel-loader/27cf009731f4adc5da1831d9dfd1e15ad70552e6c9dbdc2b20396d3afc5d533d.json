{"ast":null,"code":"var _jsxFileName = \"/Users/gyuri/Desktop/4-1/webprogramming/week3/week3/src/components/PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = ({\n  addPost\n}) => {\n  _s();\n  const [writer, setWriter] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const newPost = {\n    writer,\n    title,\n    body\n  };\n  const savePost = async e => {\n    try {\n      const response = await axios.post(\"http://localhost:8080/board\", newPost);\n      if (response.status === 200) {\n        addPost({\n          ...newPost,\n          id: response.data.id\n        });\n        alert(\"게시물이 등록되었습니다.\");\n        setAuthor(\"\");\n        setTitle(\"\");\n        setContent(\"\");\n        navigate(\"/\");\n      } else {\n        throw new Error(\"게시물 등록 실패\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"게시물 등록에 실패했습니다.\");\n    }\n  };\n  const backToBoard = () => {\n    navigate(\"/board\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uAE00\\uC4F4\\uC774\",\n      value: author,\n      onChange: e => setWriter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC81C\\uBAA9\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"\\uB0B4\\uC6A9\",\n      value: body,\n      onChange: e => setBody(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: savePost,\n      children: \"\\uC800\\uC7A5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: backToBoard,\n      children: \"\\uCDE8\\uC18C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"6V3TBQi+v1N8yZG7pH7h/tJ+9CQ=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PostForm","addPost","_s","writer","setWriter","title","setTitle","body","setBody","newPost","savePost","e","response","axios","post","status","id","data","alert","setAuthor","setContent","navigate","Error","error","console","backToBoard","children","type","placeholder","value","author","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/gyuri/Desktop/4-1/webprogramming/week3/week3/src/components/PostForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst PostForm = ({ addPost }) => {\n  const [writer, setWriter] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const newPost = {\n    writer,\n    title,\n    body,\n  };\n  const savePost = async (e) => {\n    try {\n      const response = await axios.post(\"http://localhost:8080/board\", newPost);\n\n      if (response.status === 200) {\n        addPost({ ...newPost, id: response.data.id });\n        alert(\"게시물이 등록되었습니다.\");\n        setAuthor(\"\");\n        setTitle(\"\");\n        setContent(\"\");\n        navigate(\"/\");\n      } else {\n        throw new Error(\"게시물 등록 실패\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"게시물 등록에 실패했습니다.\");\n    }\n  };\n\n  const backToBoard = () => {\n    navigate(\"/board\");\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"글쓴이\"\n        value={author}\n        onChange={(e) => setWriter(e.target.value)}\n      />\n      <br />\n      <input\n        type=\"text\"\n        placeholder=\"제목\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <br />\n      <textarea\n        placeholder=\"내용\"\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n      />\n      <button onClick={savePost}>저장</button>\n      <button onClick={backToBoard}>취소</button>\n    </div>\n  );\n};\n\nexport default PostForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,OAAO,GAAG;IACdN,MAAM;IACNE,KAAK;IACLE;EACF,CAAC;EACD,MAAMG,QAAQ,GAAG,MAAOC,CAAC,IAAK;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,6BAA6B,EAAEL,OAAO,CAAC;MAEzE,IAAIG,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3Bd,OAAO,CAAC;UAAE,GAAGQ,OAAO;UAAEO,EAAE,EAAEJ,QAAQ,CAACK,IAAI,CAACD;QAAG,CAAC,CAAC;QAC7CE,KAAK,CAAC,eAAe,CAAC;QACtBC,SAAS,CAAC,EAAE,CAAC;QACbb,QAAQ,CAAC,EAAE,CAAC;QACZc,UAAU,CAAC,EAAE,CAAC;QACdC,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,WAAW,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BL,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EACF,CAAC;EAED,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBJ,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEtB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAK;MACjBC,KAAK,EAAEC,MAAO;MACdC,QAAQ,EAAGpB,CAAC,IAAKP,SAAS,CAACO,CAAC,CAACqB,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFrC,OAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNrC,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,cAAI;MAChBC,KAAK,EAAExB,KAAM;MACb0B,QAAQ,EAAGpB,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACqB,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFrC,OAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNrC,OAAA;MACE6B,WAAW,EAAC,cAAI;MAChBC,KAAK,EAAEtB,IAAK;MACZwB,QAAQ,EAAGpB,CAAC,IAAKH,OAAO,CAACG,CAAC,CAACqB,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFrC,OAAA;MAAQsC,OAAO,EAAE3B,QAAS;MAAAgB,QAAA,EAAC;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtCrC,OAAA;MAAQsC,OAAO,EAAEZ,WAAY;MAAAC,QAAA,EAAC;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAAClC,EAAA,CA3DIF,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AA6Dd,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}