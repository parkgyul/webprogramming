{"ast":null,"code":"var _jsxFileName = \"/Users/gyuri/Desktop/4-1/webprogramming/week3/week3/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const navigate = useNavigate();\n  const [boardList, setBoardList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(5); // Number of posts per page, adjust as needed\n\n  useEffect(() => {\n    getBoardList();\n  }, [currentPage]); // Reload boardList when currentPage changes\n\n  const getBoardList = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/main\");\n      setBoardList(response.data);\n    } catch (error) {\n      console.error(\"불러오지 못함\", error);\n    }\n  };\n\n  // Get current posts based on pagination\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = boardList.slice(indexOfFirstPost, indexOfLastPost);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const Post = () => {\n    navigate(\"/postform\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"\\uAC8C\\uC2DC\\uD310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        float: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Post,\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: currentPosts.map(board => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/board/${board.id}`,\n          children: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), \"\\xA0\\xA0 | \\xA0\\xA0 \\uC791\\uC131\\uC790 : \", board.writer, \"\\xA0\\xA0 | \\xA0\\xA0 \\uC791\\uC131 \\uC2DC\\uAC04 : \", board.writingTime]\n      }, board.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [...Array(Math.ceil(boardList.length / postsPerPage)).keys()].map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(number + 1),\n        children: number + 1\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"2B5kKZe6DNbTezhs2/MlvgI/eNY=\", false, function () {\n  return [useNavigate];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","axios","jsxDEV","_jsxDEV","Board","_s","navigate","boardList","setBoardList","currentPage","setCurrentPage","postsPerPage","getBoardList","response","get","data","error","console","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","Post","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","float","onClick","map","board","to","id","title","writer","writingTime","Array","Math","ceil","length","keys","number","_c","$RefreshReg$"],"sources":["/Users/gyuri/Desktop/4-1/webprogramming/week3/week3/src/components/Board.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Board = () => {\n  const navigate = useNavigate();\n  const [boardList, setBoardList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(5); // Number of posts per page, adjust as needed\n\n  useEffect(() => {\n    getBoardList();\n  }, [currentPage]); // Reload boardList when currentPage changes\n\n  const getBoardList = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/main\");\n      setBoardList(response.data);\n    } catch (error) {\n      console.error(\"불러오지 못함\", error);\n    }\n  };\n\n  // Get current posts based on pagination\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = boardList.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const Post = () => {\n    navigate(\"/postform\");\n  };\n\n  return (\n    <div>\n      <h1 style={{ textAlign: \"center\" }}>게시판</h1>\n      <div style={{ float: \"right\" }}>\n        <button onClick={Post}>글쓰기</button>\n      </div>\n      <br />\n      <ul>\n        {currentPosts.map((board) => (\n          <li key={board.id}>\n            <Link to={`/board/${board.id}`}>{board.title}</Link>\n            &nbsp;&nbsp; | &nbsp;&nbsp; 작성자 : {board.writer}\n            &nbsp;&nbsp; | &nbsp;&nbsp; 작성 시간 : {board.writingTime}\n          </li>\n        ))}\n      </ul>\n      <div style={{ textAlign: \"center\" }}>\n        {/* Pagination controls */}\n        {[...Array(Math.ceil(boardList.length / postsPerPage)).keys()].map(\n          (number) => (\n            <button key={number} onClick={() => paginate(number + 1)}>\n              {number + 1}\n            </button>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}